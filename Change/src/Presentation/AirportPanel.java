/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import Interfaces.ControllerInterface;
import Interfaces.CountryInterface;
import Interfaces.EventInterface;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.List;
import java.util.Map.Entry;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JCheckBox;

/**
 *
 * @author priva_000
 */
public class AirportPanel extends javax.swing.JPanel implements Observer {

    /**
     * Creates new form AirportPanel
     */
    public AirportPanel() {
        initComponents();

        GameController.getInstance().addObserver(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeadline = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        airportLayoutPanel = new javax.swing.JPanel();
        checkinPanel = new javax.swing.JPanel();
        btnGo = new javax.swing.JButton();
        lblInventory = new javax.swing.JLabel();
        ddlCountries = new javax.swing.JComboBox();
        lblSelect = new javax.swing.JLabel();
        lblYouAre = new javax.swing.JLabel();
        lblCountry = new javax.swing.JLabel();
        servicesPanel = new javax.swing.JPanel();
        flyingPanel = new javax.swing.JPanel();
        lblFlying = new javax.swing.JLabel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        lblHeadline.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblHeadline.setText("Airport");

        airportLayoutPanel.setLayout(new java.awt.CardLayout());

        btnGo.setText("Travel ");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        lblInventory.setText("Help items");

        lblSelect.setText("Select country:");

        lblYouAre.setText("You are traveling from");

        lblCountry.setText("{country}");

        servicesPanel.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout checkinPanelLayout = new javax.swing.GroupLayout(checkinPanel);
        checkinPanel.setLayout(checkinPanelLayout);
        checkinPanelLayout.setHorizontalGroup(
            checkinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkinPanelLayout.createSequentialGroup()
                .addGroup(checkinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkinPanelLayout.createSequentialGroup()
                        .addComponent(lblSelect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ddlCountries, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(checkinPanelLayout.createSequentialGroup()
                        .addComponent(lblYouAre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCountry))
                    .addComponent(btnGo)
                    .addGroup(checkinPanelLayout.createSequentialGroup()
                        .addComponent(lblInventory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(servicesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 502, Short.MAX_VALUE))
        );
        checkinPanelLayout.setVerticalGroup(
            checkinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkinPanelLayout.createSequentialGroup()
                .addGroup(checkinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYouAre)
                    .addComponent(lblCountry))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelect)
                    .addComponent(ddlCountries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(servicesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblInventory))
                .addGap(13, 13, 13)
                .addComponent(btnGo)
                .addGap(0, 275, Short.MAX_VALUE))
        );

        airportLayoutPanel.add(checkinPanel, "checkinCard");

        lblFlying.setText("You are flying..");

        javax.swing.GroupLayout flyingPanelLayout = new javax.swing.GroupLayout(flyingPanel);
        flyingPanel.setLayout(flyingPanelLayout);
        flyingPanelLayout.setHorizontalGroup(
            flyingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flyingPanelLayout.createSequentialGroup()
                .addComponent(lblFlying)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        flyingPanelLayout.setVerticalGroup(
            flyingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flyingPanelLayout.createSequentialGroup()
                .addComponent(lblFlying)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        airportLayoutPanel.add(flyingPanel, "flyingCard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblHeadline)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(airportLayoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblHeadline)
                .addGap(15, 15, 15)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(airportLayoutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        changeCard("checkinCard");
    }//GEN-LAST:event_formComponentShown

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        GameController controller = GameController.getInstance();

        CountryInterface country = (CountryInterface) ddlCountries.getSelectedItem();

        for (Component comp : this.servicesPanel.getComponents()) {
            if (!(comp instanceof JCheckBox)) {
                continue;
            }

            JCheckBox ch = (JCheckBox) comp;
            
            controller.getService()
                    .getPlayer()
                    .getServices()
                    .put(ch.getText(), ch.isSelected());
        }

        List<EventInterface> flyResults = controller.getService().fly(country);

        changeCard("flyingCard");

        StringBuilder strBuilder = new StringBuilder();
        strBuilder.append("<html><body>");

        if (flyResults.isEmpty()) {
            strBuilder.append("You slipped trough the airport without any events happing");
        } else {
            for (EventInterface event : flyResults) {
                strBuilder.append(event.getDecr()).append("<br />");
            }
        }

        strBuilder.append("</body></html>");

        lblFlying.setText(strBuilder.toString());

        controller.requestUpdate();
    }//GEN-LAST:event_btnGoActionPerformed

    private void changeCard(String cardName) {
        CardLayout layout = (CardLayout) this.airportLayoutPanel.getLayout();
        layout.show(this.airportLayoutPanel, cardName);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel airportLayoutPanel;
    private javax.swing.JButton btnGo;
    private javax.swing.JPanel checkinPanel;
    private javax.swing.JComboBox ddlCountries;
    private javax.swing.JPanel flyingPanel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblFlying;
    private javax.swing.JLabel lblHeadline;
    private javax.swing.JLabel lblInventory;
    private javax.swing.JLabel lblSelect;
    private javax.swing.JLabel lblYouAre;
    private javax.swing.JPanel servicesPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object o1) {
        GameController controller = GameController.getInstance();
        ControllerInterface service = controller.getService();
        CountryInterface currentCountry = service.getPlayer().getCurrentCountry();

        lblCountry.setText(currentCountry.getName());

        ddlCountries.removeAllItems();
        for (CountryInterface country : service.getCountries()) {
            if (currentCountry.equals(country)) {
                continue;
            }

            ddlCountries.addItem(country);
        }

        servicesPanel.removeAll();
        for (Entry<String, Boolean> entry : service.getPlayer().getServices().entrySet()) {
            servicesPanel.add(new JCheckBox(entry.getKey(), false));
        }
    }
}
